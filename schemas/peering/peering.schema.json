{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
            },
            "flavor": {
              "type": "string",
              "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
            },
            "version": {
              "type": "string",
              "description": "This field can be used to pin to a particular version"
            },
            "lifecycle": {
              "type": "string",
              "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
              "enum": [
                "ENVIRONMENT_BOOTSTRAP",
                "ENVIRONMENT"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag to disable the resource"
            },
            "conditional_on_intent": {
              "type": "string",
              "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
            },
            "provided": {
              "type": "boolean",
              "description": "Flag to tell if the resource should not be provisioned by facets",
              "default": false
            },
            "depends_on": {
              "type": "array",
              "items": {},
              "description": "Dependencies on other resources. e.g. application x may depend on mysql"
            },
            "metadata": {
              "type": "object",
              "description": "Metadata related to the resource",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
                }
              },
              "required": []
            },
            "spec": {
              "type": "object",
              "description": "Specification as per resource types schema"
            },
            "out": {
              "type": "object",
              "description": "Output given by the resource for others to refer."
            },
            "advanced": {
              "type": "object",
              "description": "Additional fields if any for a particular implementation of a resource"
            }
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": false
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata",
              "spec"
            ]
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "properties": {
            "account_id": {
              "type": "string",
              "description": "The account id of the cloud that you want to peer vpc with"
            },
            "vpc_id": {
              "type": "string",
              "description": "The accepter vpc id of the account id"
            },
            "cidr": {
              "type": "string",
              "description": "The CIDR range of the vpc that you want to peered"
            },
            "region": {
              "type": "string",
              "description": "The region where the vpc exists in your account"
            }
          },
          "required": [
            "account_id",
            "vpc_id",
            "cidr",
            "region"
          ]
        },
        "advanced": {
          "anyOf": [
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "aws_vpc_peering": {
                  "type": "object",
                  "description": "Advanced section of the aws vpc peering module",
                  "properties": {}
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "out": {
          "type": "object",
          "properties": {
            "interfaces": {
              "type": "object",
              "description": "The output for your peering module, can be generated or provided",
              "$schema": "http://json-schema.org/draft-04/schema#",
              "definition": "Any Interface",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Username to connect (if any)"
                },
                "password": {
                  "type": "string",
                  "description": "Password to connect (if any)"
                },
                "host": {
                  "type": "string",
                  "description": "Host for service discovery"
                },
                "port": {
                  "type": "string",
                  "description": "Port for service discovery"
                },
                "name": {
                  "type": "string",
                  "description": "Name of interface, same as key"
                },
                "connection_string": {
                  "type": "string",
                  "description": "Connection string to connect"
                }
              }
            },
            "required": []
          }
        }
      }
    }
  ],
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ]
}
