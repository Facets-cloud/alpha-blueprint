{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
            },
            "flavor": {
              "type": "string",
              "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
            },
            "version": {
              "type": "string",
              "description": "This field can be used to pin to a particular version"
            },
            "lifecycle": {
              "type": "string",
              "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
              "enum": [
                "ENVIRONMENT_BOOTSTRAP",
                "ENVIRONMENT"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag to disable the resource"
            },
            "conditional_on_intent": {
              "type": "string",
              "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
            },
            "provided": {
              "type": "boolean",
              "description": "Flag to tell if the resource should not be provisioned by facets",
              "default": false
            },
            "depends_on": {
              "type": "array",
              "items": {},
              "description": "Dependencies on other resources. e.g. application x may depend on mysql"
            },
            "metadata": {
              "type": "object",
              "description": "Metadata related to the resource",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
                }
              },
              "required": []
            },
            "spec": {
              "type": "object",
              "description": "Specification as per resource types schema"
            },
            "out": {
              "type": "object",
              "description": "Output given by the resource for others to refer."
            },
            "advanced": {
              "type": "object",
              "description": "Additional fields if any for a particular implementation of a resource"
            }
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": false
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata",
              "spec"
            ]
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "properties": {
            "aliases": {
              "type": "object",
              "description": "Extra CNAMEs (alternate domain names), if any, for this distribution. Follow this url https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html#alternate-domain-names-requirements to understand the requirements for using alternate domain names.",
              "patternProperties": {
                "^[a-zA-Z0-9-_]*$": {
                  "type": "string",
                  "description": "Extra CNAME (alternate domain name)"
                }
              }
            },
            "viewer_certificate": {
              "type": "object",
              "description": "The SSL configuration for this distribution. Please check this url for supported attributes - https://registry.terraform.io/providers/hashicorp/aws/3.74.0/docs/resources/cloudfront_distribution.html#viewer-certificate-arguments",
              "properties": {
                "acm_certificate_arn": {
                  "type": "string",
                  "description": "The ARN of the AWS Certificate Manager certificate that you wish to use with this distribution. Specify this, cloudfront_default_certificate, or iam_certificate_id. The ACM certificate must be in US-EAST-1"
                },
                "cloudfront_default_certificate": {
                  "type": "boolean",
                  "description": "If you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution."
                },
                "iam_certificate_id": {
                  "type": "string",
                  "description": "The IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain."
                },
                "minimum_protocol_version": {
                  "type": "string",
                  "description": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if `cloudfront_default_certificate = false`. See all possible values in this https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html table under `Security policy.` Some examples include: `TLSv1.2_2019` and `TLSv1.2_2021`. Default: `TLSv1`. \nNOTE: If you are using a custom certificate (specified with `acm_certificate_arn` or `iam_certificate_id`), and have specified `sni-only` in `ssl_support_method`, `TLSv1` or later must be specified. If you have specified `vip` in `ssl_support_method`, only `SSLv3` or `TLSv1` can be specified. If you have specified `cloudfront_default_certificate`, `TLSv1` must be specified."
                },
                "ssl_support_method": {
                  "type": "string",
                  "description": "Specifies how you want CloudFront to serve HTTPS requests. One of `vip` or `sni-only`. Required if you specify `acm_certificate_arn` or `iam_certificate_id`. \nNOTE: `vip` causes CloudFront to use a dedicated IP address and may incur extra charges.",
                  "enum": [
                    "vip",
                    "sni-only"
                  ]
                }
              },
              "oneOf": [
                {
                  "required": [
                    "acm_certificate_arn"
                  ]
                },
                {
                  "required": [
                    "cloudfront_default_certificate"
                  ]
                },
                {
                  "required": [
                    "iam_certificate_id"
                  ]
                }
              ]
            },
            "origins": {
              "type": "object",
              "description": "One or more origins for this distribution (multiples allowed).",
              "patternProperties": {
                "^[a-zA-Z0-9-_]*$": {
                  "type": "object",
                  "description": "Origin for this distribution. Please check this url for supported attributes - https://registry.terraform.io/providers/hashicorp/aws/3.74.0/docs/resources/cloudfront_distribution.html#origin-arguments",
                  "properties": {
                    "domain_name": {
                      "type": "string",
                      "description": "The DNS domain name of either the S3 bucket, or web site of your custom origin."
                    }
                  },
                  "required": [
                    "domain_name"
                  ]
                }
              }
            },
            "default_cache_behavior": {
              "type": "object",
              "description": "The default cache behavior for this distribution. Please check this url for supported attributes - https://registry.terraform.io/providers/hashicorp/aws/3.74.0/docs/resources/cloudfront_distribution.html#default-cache-behavior-arguments",
              "properties": {
                "target_origin_id": {
                  "type": "string",
                  "description": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern for the default cache behavior. This will be key of the `spec.origins` attribute."
                },
                "allowed_methods": {
                  "type": "array",
                  "description": "Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin."
                },
                "cached_methods": {
                  "type": "array",
                  "description": "Controls whether CloudFront caches the response to requests using the specified HTTP methods."
                },
                "viewer_protocol_policy": {
                  "type": "string",
                  "description": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern.",
                  "enum": [
                    "allow-all",
                    "https-only",
                    "redirect-to-https"
                  ]
                }
              },
              "required": [
                "target_origin_id",
                "allowed_methods",
                "cached_methods",
                "viewer_protocol_policy"
              ]
            }
          },
          "required": [
            "aliases",
            "viewer_certificate",
            "origins",
            "default_cache_behavior"
          ]
        },
        "advanced": {
          "type": "object",
          "properties": {
            "cloudfront": {
              "type": "object",
              "description": "The advanced section of CloudFront module. You can pass the values as per terraform modules inputs - https://registry.terraform.io/modules/terraform-aws-modules/cloudfront/aws/2.9.3?tab=inputs ",
              "properties": {
                "ordered_cache_behaviors": {
                  "type": "object",
                  "description": "An ordered map of cache behaviors resource for this distribution. Pass the map of object from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.",
                  "patternProperties": {
                    "^[a-zA-Z0-9-_]*$": {
                      "description": "Cache behavior resource. Please check this url for supported attributes - https://registry.terraform.io/providers/hashicorp/aws/3.74.0/docs/resources/cloudfront_distribution.html#ordered_cache_behavior",
                      "type": "object",
                      "properties": {
                        "target_origin_id": {
                          "type": "string",
                          "description": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern for the default cache behavior. This will be key of the `spec.origins` attribute."
                        },
                        "path_pattern": {
                          "type": "string",
                          "description": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to."
                        },
                        "allowed_methods": {
                          "type": "array",
                          "description": "Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin."
                        },
                        "cached_methods": {
                          "type": "array",
                          "description": "Controls whether CloudFront caches the response to requests using the specified HTTP methods."
                        },
                        "viewer_protocol_policy": {
                          "type": "string",
                          "description": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern.",
                          "enum": [
                            "allow-all",
                            "https-only",
                            "redirect-to-https"
                          ]
                        }
                      }
                    }
                  }
                },
                "custom_error_responses": {
                  "type": "object",
                  "description": "One or more custom error response elements.",
                  "patternProperties": {
                    "^[a-zA-Z0-9-_]*$": {
                      "description": "Custom error response element. Please check this url for supported attributes - https://registry.terraform.io/providers/hashicorp/aws/3.74.0/docs/resources/cloudfront_distribution.html#custom-error-response-arguments",
                      "type": "object",
                      "properties": {
                        "error_code": {
                          "type": "number",
                          "description": "The 4xx or 5xx HTTP status code that you want to customize."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "cloudfront"
          ]
        },
        "flavor": {
          "type": "string",
          "enum": [
            "default"
          ]
        },
        "version": {
          "type": "string",
          "enum": [
            "0.1",
            "latest"
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "out": {
          "type": "object",
          "properties": {
            "attributes": {
              "type": "object",
              "description": "The output attributes for CloudFront module",
              "properties": {
                "cloudfront_distribution_arn": {
                  "type": "string",
                  "description": "The ARN (Amazon Resource Name) for the distribution"
                },
                "cloudfront_distribution_domain_name": {
                  "type": "string",
                  "description": "The domain name corresponding to the distribution"
                },
                "cloudfront_distribution_etag": {
                  "type": "string",
                  "description": "The current version of the distribution's information"
                },
                "cloudfront_distribution_id": {
                  "type": "string",
                  "description": "The identifier for the distribution"
                },
                "cloudfront_distribution_last_modified_time": {
                  "type": "string",
                  "description": "The date and time the distribution was last modified"
                }
              }
            }
          },
          "required": []
        }
      }
    }
  ],
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ]
}
