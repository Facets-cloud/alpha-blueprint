{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
            },
            "flavor": {
              "type": "string",
              "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
            },
            "version": {
              "type": "string",
              "description": "This field can be used to pin to a particular version"
            },
            "lifecycle": {
              "type": "string",
              "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
              "enum": [
                "ENVIRONMENT_BOOTSTRAP",
                "ENVIRONMENT"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag to disable the resource"
            },
            "conditional_on_intent": {
              "type": "string",
              "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
            },
            "provided": {
              "type": "boolean",
              "description": "Flag to tell if the resource should not be provisioned by facets",
              "default": false
            },
            "depends_on": {
              "type": "array",
              "items": {},
              "description": "Dependencies on other resources. e.g. application x may depend on mysql"
            },
            "metadata": {
              "type": "object",
              "description": "Metadata related to the resource",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
                }
              },
              "required": []
            },
            "spec": {
              "type": "object",
              "description": "Specification as per resource types schema"
            },
            "out": {
              "type": "object",
              "description": "Output given by the resource for others to refer."
            },
            "advanced": {
              "type": "object",
              "description": "Additional fields if any for a particular implementation of a resource"
            }
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": false
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata",
              "spec"
            ]
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "description": "Spec block of the resource",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "connection": {
                  "type": "string",
                  "description": "Database connection type",
                  "enum": [
                    "mysql"
                  ]
                },
                "database": {
                  "type": "string",
                  "description": "Name of the schemahero database object"
                },
                "primary_key": {
                  "type": "array",
                  "description": "List of column names as the primary key of the table",
                  "minItems": 1
                },
                "indexes": {
                  "type": "object",
                  "description": "Indexes of the table",
                  "additionalProperties": false,
                  "minProperties": 1,
                  "patternProperties": {
                    ".*": {
                      "type": "object",
                      "properties": {
                        "columns": {
                          "type": "array",
                          "description": "Define columns in the index",
                          "minItems": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the index"
                        },
                        "is_unique": {
                          "type": "boolean",
                          "description": "Bool indicating a unique index"
                        }
                      },
                      "required": [
                        "columns",
                        "name",
                        "is_unique"
                      ]
                    }
                  }
                },
                "foreign_keys": {
                  "type": "object",
                  "description": "Foreign keys of the table",
                  "additionalProperties": false,
                  "minProperties": 1,
                  "patternProperties": {
                    ".*": {
                      "type": "object",
                      "properties": {
                        "columns": {
                          "type": "array",
                          "description": "Columns in the foreign key",
                          "minItems": 1
                        },
                        "references": {
                          "type": "object",
                          "properties": {
                            "table": {
                              "type": "string",
                              "description": "Table name of the reference table"
                            },
                            "columns": {
                              "type": "array",
                              "description": "Foreign table columns",
                              "minItems": 1
                            }
                          },
                          "description": "Other side of the reference",
                          "required": [
                            "table",
                            "columns"
                          ]
                        }
                      },
                      "required": [
                        "columns",
                        "references"
                      ]
                    }
                  }
                }
              }
            },
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "columns": {
                  "type": "object",
                  "additionalProperties": false,
                  "minProperties": 1,
                  "description": "Columns of the table",
                  "patternProperties": {
                    ".*": {
                      "type": "object",
                      "description": "Table column",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the column"
                        },
                        "type": {
                          "type": "string",
                          "description": "Data type of the column"
                        },
                        "constraints": {
                          "type": "object",
                          "description": "Adding constraints to the table"
                        },
                        "attributes": {
                          "type": "object",
                          "description": "Adding attributes to the column"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    }
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "connection": {
                    "enum": [
                      "postgres"
                    ]
                  }
                }
              },
              "then": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "columns": {
                    "type": "object",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "description": "Columns of the table",
                    "patternProperties": {
                      ".*": {
                        "type": "object",
                        "description": "Table column",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the column"
                          },
                          "type": {
                            "type": "string",
                            "description": "Data type of the column"
                          },
                          "constraints": {
                            "type": "object",
                            "description": "Adding constraints to the table"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "connection",
                "database",
                "columns",
                "primary_key"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "advanced": {
          "type": "object",
          "description": "Advanced block of schemahero table",
          "properties": {
            "default": {
              "type": "object",
              "description": "Spec values as per the API reference https://schemahero.io/reference/v1alpha4/table/"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Metadata related to the resource",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the resource"
            }
          },
          "required": [
            "name"
          ]
        },
        "version": {
          "type": "string",
          "enum": [
            "0.1"
          ],
          "description": "This field can be used to pin to a particular version"
        },
        "flavor": {
          "type": "string",
          "enum": [
            "default",
            "k8s"
          ],
          "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
        }
      }
    }
  ],
  "required": [
    "kind",
    "flavor",
    "metadata",
    "spec",
    "version"
  ]
}
