{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "if": {
        "properties": {
          "flavor": {
            "const": "node_fleet"
          }
        },
        "required": ["flavor"]
      },
      "then": {
        "properties": {
          "spec": {
            "$ref": "./kubernetes_node_pool.node_fleet.schema.json"
          }
        }
      },
      "else": {
        "properties": {
          "spec": {
            "type": "object",
            "description": "Specification as per resource types schema",
            "properties": {
              "instance_type": {
                "type": "string",
                "description": "Instance type associated with the Node Pool"
              },
              "min_node_count": {
                "type": "number",
                "description": "Minimum number of worker nodes"
              },
              "max_node_count": {
                "type": "number",
                "description": "Maximum number of worker nodes"
              },
              "disk_size": {
                "type": "number",
                "description": "Disk size in GiB for worker nodes"
              },
              "azs": {
                "type": "string",
                "description": "Comma separated string of one or more availability zones for the Node Pool"
              },
              "is_public": {
                "type": "boolean",
                "description": "Whether to launch nodes in Public or Private network"
              },
              "taints": {
                "type": "object",
                "description": "The Kubernetes taints to be applied to the nodes in the Node Pool. Maximum of 50 taints per Node Pool",
                "patternProperties": {
                  "^[a-zA-Z]+\\d+$": {
                    "type": "object",
                    "description": "Specify taint",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The key of the taint",
                        "minLength": 2,
                        "maxLength": 63
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the taint",
                        "minLength": 2,
                        "maxLength": 63
                      },
                      "effect": {
                        "type": "string",
                        "description": "The effect of the taint",
                        "enum": [
                          "NoSchedule",
                          "NoExecute",
                          "PreferNoSchedule"
                        ]
                      }
                    }
                  }
                }
              },
              "labels": {
                "type": "object",
                "description": "Key-value map of Kubernetes labels"
              }
            },
            "required": [
              "instance_type",
              "min_node_count",
              "max_node_count",
              "is_public",
              "disk_size",
              "azs",
              "taints",
              "labels"
            ]
          }
        }
      }
    }
  ],
  "properties": {
    "kind": {
      "enum": [
        "kubernetes_node_pool"
      ],
      "type": "string",
      "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
    },
    "flavor": {
      "enum": [
        "eks_self_managed",
        "aks",
        "eks_managed",
        "gke_node_pool",
        "node_fleet"
      ],
      "type": "string",
      "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
    },
    "version": {
      "enum": [
        "0.1", "0.2"
      ],
      "type": "string",
      "description": "This field can be used to pin to a particular version"
    },
    "lifecycle": {
      "type": "string",
      "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
      "enum": [
        "ENVIRONMENT_BOOTSTRAP",
        "ENVIRONMENT"
      ]
    },
    "disabled": {
      "type": "boolean",
      "description": "Flag to disable the resource"
    },
    "conditional_on_intent": {
      "type": "string",
      "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
    },
    "provided": {
      "type": "boolean",
      "description": "Flag to tell if the resource should not be provisioned by facets",
      "default": false
    },
    "depends_on": {
      "type": "array",
      "items": {},
      "description": "Dependencies on other resources. e.g. application x may depend on mysql"
    },
    "metadata": {
      "type": "object",
      "description": "Metadata related to the resource",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
        }
      },
      "required": []
    },
    "out": {
      "type": "object",
      "description": "Output given by the resource for others to refer."
    },
    "advanced": {
      "type": "object",
      "description": "Additional fields if any for a particular implementation of a resource",
      "allOf": [
        {
          "$ref": "./flavor-aks.schema.json"
        },
        {
          "$ref": "./flavor-eks-managed.schema.json"
        },
        {
          "$ref": "./flavor-eks-self-managed.schema.json"
        },
        {
          "$ref": "./flavor-node_fleet.schema.json"
        }
      ]
    }
  },
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ]
}
