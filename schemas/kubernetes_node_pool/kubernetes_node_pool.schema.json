{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
            },
            "flavor": {
              "type": "string",
              "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
            },
            "version": {
              "type": "string",
              "description": "This field can be used to pin to a particular version"
            },
            "lifecycle": {
              "type": "string",
              "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
              "enum": [
                "ENVIRONMENT_BOOTSTRAP",
                "ENVIRONMENT"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag to disable the resource"
            },
            "conditional_on_intent": {
              "type": "string",
              "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
            },
            "provided": {
              "type": "boolean",
              "description": "Flag to tell if the resource should not be provisioned by facets",
              "default": false
            },
            "depends_on": {
              "type": "array",
              "items": {},
              "description": "Dependencies on other resources. e.g. application x may depend on mysql"
            },
            "metadata": {
              "type": "object",
              "description": "Metadata related to the resource",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
                }
              },
              "required": []
            },
            "spec": {
              "type": "object",
              "description": "Specification as per resource types schema"
            },
            "out": {
              "type": "object",
              "description": "Output given by the resource for others to refer."
            },
            "advanced": {
              "type": "object",
              "description": "Additional fields if any for a particular implementation of a resource"
            }
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": false
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata",
              "spec"
            ]
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "properties": {
            "instance_type": {
              "type": "string",
              "description": "Instance type associated with the Node Pool"
            },
            "min_node_count": {
              "type": "number",
              "description": "Minimum number of worker nodes"
            },
            "max_node_count": {
              "type": "number",
              "description": "Maximum number of worker nodes"
            },
            "disk_size": {
              "type": "number",
              "description": "Disk size in GiB for worker nodes"
            },
            "azs": {
              "type": "string",
              "description": "Comma separated string of one or more availability zones for the Node Pool"
            },
            "is_public": {
              "type": "boolean",
              "description": "Whether to launch nodes in Public or Private network"
            },
            "taints": {
              "type": "object",
              "description": "The Kubernetes taints to be applied to the nodes in the Node Pool. Maximum of 50 taints per Node Pool",
              "patternProperties": {
                "^[a-zA-Z]+\\d+$": {
                  "type": "object",
                  "description": "Specify taint",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "The key of the taint",
                      "minLength": 2,
                      "maxLength": 63
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the taint",
                      "minLength": 2,
                      "maxLength": 63
                    },
                    "effect": {
                      "type": "string",
                      "description": "The effect of the taint",
                      "enum": [
                        "NoSchedule",
                        "NoExecute",
                        "PreferNoSchedule"
                      ]
                    }
                  }
                }
              }
            },
            "labels": {
              "type": "object",
              "description": "Key-value map of Kubernetes labels"
            }
          },
          "required": [
            "instance_type",
            "min_node_count",
            "max_node_count",
            "is_public",
            "disk_size",
            "azs",
            "taints",
            "labels"
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "advanced": {
          "allOf": [
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "description": "Advanced Values for AKS nodepool",
              "properties": {
                "aks": {
                  "type": "object",
                  "description": "Advanced Values for AKS nodepool",
                  "properties": {
                    "node_pool": {
                      "type": "object",
                      "description": "aks values as per the documentation  https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster_node_pool",
                      "properties": {
                        "values": {
                          "type": "object",
                          "properties": {
                            "upgrade_settings": {
                              "type": "object",
                              "properties": {
                                "max_surge": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "max_surge"
                              ]
                            },
                            "kubelet_config": {
                              "type": "object",
                              "description": "Block for all Linux configuration"
                            },
                            "linux_os_config": {
                              "type": "object",
                              "description": "Block for all Linux configuration",
                              "properties": {
                                "sysctl_config": {
                                  "type": "object",
                                  "description": "Block for all System control configurations which should be under linux_os_config"
                                }
                              }
                            },
                            "tags": {
                              "type": "object",
                              "description": "Tags required for the nodes created",
                              "properties": {
                                "test": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "definition": "EKS Schema",
              "properties": {
                "eks_managed": {
                  "type": "object",
                  "description": "Advanced values as per Terraform AWS EKS Managed Node Group resource https://registry.terraform.io/modules/terraform-aws-modules/eks/aws/18.30.3/submodules/eks-managed-node-group \nNote: If you want to pass multiple intsnace types then you can use `instance_types` attribute in advanced along with spec.instance_type"
                }
              },
              "required": []
            },
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "definition": "EKS Schema",
              "properties": {
                "eks": {
                  "type": "object",
                  "description": "Advanced section of the EKS Self Managed",
                  "properties": {
                    "self_managed_node_group": {
                      "type": "object",
                      "description": "Advanced values as per Terraform AWS EKS Self Managed Node Group module https://registry.terraform.io/modules/terraform-aws-modules/eks/aws/latest/submodules/self-managed-node-group?tab=inputs"
                    }
                  }
                }
              },
              "required": []
            }
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "kubernetes_node_pool"
          ]
        },
        "flavor": {
          "type": "string",
          "enum": [
            "eks_self_managed",
            "aks",
            "eks_managed"
          ]
        },
        "version": {
          "type": "string",
          "enum": [
            "0.1",
            "latest"
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "out": {
          "type": "object",
          "additionalProperties": false,
          "allOf": [
            {
              "type": "object",
              "properties": {
                "spec": {
                  "type": "object",
                  "properties": {
                    "instance_type": {
                      "type": "string",
                      "description": "Instance type associated with the Node Pool"
                    },
                    "min_node_count": {
                      "type": "number",
                      "description": "Minimum number of worker nodes"
                    },
                    "max_node_count": {
                      "type": "number",
                      "description": "Maximum number of worker nodes"
                    },
                    "disk_size": {
                      "type": "number",
                      "description": "Disk size in GiB for worker nodes"
                    },
                    "azs": {
                      "type": "string",
                      "description": "Comma separated string of one or more availability zones for the Node Pool"
                    },
                    "is_public": {
                      "type": "boolean",
                      "description": "Whether to launch nodes in Public or Private network"
                    },
                    "taints": {
                      "type": "object",
                      "description": "The Kubernetes taints to be applied to the nodes in the Node Pool. Maximum of 50 taints per Node Pool",
                      "patternProperties": {
                        "^[a-zA-Z]+\\d+$": {
                          "type": "object",
                          "description": "Specify taint",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "The key of the taint",
                              "minLength": 2,
                              "maxLength": 63
                            },
                            "value": {
                              "type": "string",
                              "description": "The value of the taint",
                              "minLength": 2,
                              "maxLength": 63
                            },
                            "effect": {
                              "type": "string",
                              "description": "The effect of the taint",
                              "enum": [
                                "NoSchedule",
                                "NoExecute",
                                "PreferNoSchedule"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "labels": {
                      "type": "object",
                      "description": "Key-value map of Kubernetes labels"
                    }
                  },
                  "required": [
                    "instance_type",
                    "min_node_count",
                    "max_node_count",
                    "is_public",
                    "disk_size",
                    "azs",
                    "taints",
                    "labels"
                  ]
                }
              }
            },
            {
              "properties": {
                "name": {
                  "type": "string",
                  "additionalProperties": false
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": false
                },
                "taints": {
                  "type": "list",
                  "additionalProperties": false
                }
              },
              "required": []
            }
          ]
        }
      }
    }
  ],
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ]
}
