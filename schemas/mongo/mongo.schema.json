{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$ref": "../../traits/base.schema.json"
    },
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "mongo"
          ],
          "description": "Describes the type of resource."
        },
        "flavor": {
          "type": "string",
          "enum": [
            "k8s"
          ],
          "description": "Implementation selector for the Mongo resource. e.g. for a resource type k8s"
        },
        "version": {
          "type": "string",
          "enum": [
            "0.2",
            "latest"
          ],
          "description": "This field can be used to pin to a particular version"
        }
      }
    },
    {
      "$ref": "#/$defs/specDef"
    },
    {
      "$ref": "#/$defs/outDef"
    },
    {
      "type": "object",
      "properties": {
        "advanced": {
          "type": "object",
          "allOf": [
            {
              "$ref": "flavor-k8s.schema.json"
            }
          ]
        }
      }
    }
  ],
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ],
  "if": {
    "properties": {
      "provided": {
        "const": true
      }
    }
  },
  "then": {
    "required": [
      "out"
    ]
  },
  "else": {
    "not": {
      "required": [
        "out"
      ]
    }
  },
  "$defs": {
    "specDef": {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "authenticated": {
              "type": "boolean",
              "description": "Make this mongodb instance Password protected"
            },
            "mongo_version": {
              "type": "string",
              "description": "Version of mongodb e.g. 6.0, see valid tags here: https://hub.docker.com/_/mongo/tags?page=1",
              "minLength": 3,
              "pattern": "^(\\d+\\.)?(\\d+\\.)?(\\*|\\d+)$"
            },
            "size": {
              "allOf": [
                {
                  "type": "object",
                  "$ref": "../../traits/multi-instance-datastore-sizing.schema.json",
                  "required": [
                    "volume"
                  ]
                }
              ]
            }
          },
          "required": [
            "authenticated",
            "mongo_version",
            "size"
          ]
        }
      }
    },
    "outDef": {
      "type": "object",
      "properties": {
        "out": {
          "type": "object",
          "additionalProperties": false,
          "allOf": [
            {
              "$ref": "#/$defs/specDef"
            },
            {
              "properties": {
                "interfaces": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cluster" : {
                      "type" : "object",
                      "description" :"Map of type interface for cluster endpoint & port of MongoDB",
                      "allOf": [
                        {
                          "$ref": "../../traits/multi-node-datastore-interface.schema.json"
                        }
                      ]
                    }
                  }
                },
                "instances": {
                  "type": "object",
                  "additionalProperties": false,
                  "patternProperties": {
                    "^([a-z]*-[0-9]+)$": {
                      "$ref": "../../traits/datastore-interface.schema.json"
                    }
                  }
                }
              },
              "required": [
              ]
            }
          ]
        }
      }
    }
  }
}
