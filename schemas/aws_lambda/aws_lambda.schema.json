{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "allOf": [
        {
            "$ref": "../../traits/base.schema.json"
        },
        {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string",
                    "enum": ["aws_lambda"]
                },
                "flavor": {
                    "type": "string",
                    "enum": ["default"]
                },
                "version": {
                    "type": "string",
                    "enum": ["0.1", "latest"]
                }
            }
        },
        {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string",
                            "description": "Description of your lambda function"
                        }
                    },
                    "required": ["description"]
                }
            }
        },
        {
            "$ref": "#/$defs/specDef"
        },
        {
            "$ref": "#/$defs/outDef"
        }
    ],
    "required": [
        "kind",
        "flavor",
        "version",
        "metadata",
        "spec"
    ],
    "$defs": {
        "specDef": {
            "type": "object",
            "properties": {
                "spec": {
                    "type": "object",
                    "properties": {
                        "handler": {
                            "type": "string",
                            "description": "Lambda Function entrypoint in your code"
                        },
                        "runtime": {
                            "type": "string",
                            "description": "Lambda Function runtime"
                        },
                        "release": {
                            "type": "object",
                            "description": "The release object containing the artifacts , either S3 or container image",
                            "properties": {
                                "s3_path": {
                                    "type": "string",
                                    "description": "The full path of the zip file present in S3"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "The docker image of the application that you want to run"
                                },
                                "build": {
                                    "type": "object",
                                    "description": "These contains the build objects required for running the containers",
                                    "properties": {
                                        "artifactory": {
                                            "type": "string",
                                            "description": "Parent artifactory name"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the artifactory"
                                        }
                                    },
                                    "required": [
                                        "artifactory",
                                        "name"
                                    ]
                                }
                            },
                            "anyOf": [
                                {
                                  "required": ["s3_path"],
                                  "not": { "required": ["image", "build"] }
                                },
                                {
                                  "required": ["image"],
                                  "not": { "required": ["s3_path", "build"] }
                                },
                                {
                                  "required": ["build"],
                                  "not": { "required": ["s3_path", "image"] }
                                }
                            ]
                        },
                        "env": {
                            "type": "object",
                            "description": "A map that defines environment variables for the Lambda Function."
                        }
                    },
                    "required": [ "handler", "runtime", "release"]
                },
                "advanced": {
                    "type": "object",
                    "properties": {
                        "aws_lambda": {
                            "type": "object",
                            "description": "The advanced section of all the aws lambda module",
                            "properties": {
                                "allowed_triggers": {
                                    "type": "object",
                                    "description": "Map of allowed triggers to create Lambda permission",
                                    "additionalProperties": false,
                                    "minProperties": 1,
                                    "patternProperties": {
                                    "^[a-zA-Z0-9_.-]*$": {
                                        "description": "This is the name of the output interface this can be any name depending on the number of prefix domains in the domains block",
                                        "type": "object",
                                        "properties": {
                                            "service": {
                                                "type": "string",
                                                "description": "The service you want to invoke from",
                                                "enum": [
                                                    "apigateway", "config.amazonaws.com", "events.amazonaws.com"
                                                ]
                                            },
                                            "source_arn": {
                                                "type": "string",
                                                "description": "Set this to true if using Lambda@Edge, to enable publishing, limit the timeout, and allow edgelambda.amazonaws.com to invoke the function"
                                            }
                                        }
                                    }
                                }
                                },
                                "create_role": {
                                    "type": "boolean",
                                    "description": " Controls whether IAM role for Lambda Function should be created"
                                },
                                "lambda_at_edge": {
                                    "type": "boolean",
                                    "description": "Set this to true if using Lambda@Edge, to enable publishing, limit the timeout, and allow edgelambda.amazonaws.com to invoke the function"
                                },
                                "memory_size": {
                                    "type": "integer",
                                    "description": "Amount of memory in MB your Lambda Function can use at runtime. Valid value between 128 MB to 10,240 MB (10 GB), in 64 MB increments"
                                },
                                "publish": {
                                    "type": "boolean",
                                    "description": " Map of allowed triggers to create Lambda permissions"
                                },
                                "reserved_concurrent_executions": {
                                    "type": "integer",
                                    "description": "The amount of reserved concurrent executions for this Lambda Function. A value of 0 disables Lambda Function from being triggered and -1 removes any concurrency limitations. Defaults to Unreserved Concurrency Limits -1."
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "The amount of time your Lambda Function has to run in seconds."
                                },
                                "dead_letter_target_arn": {
                                    "type": "string",
                                    "description": "The ARN of an SNS topic or SQS queue to notify when an invocation fails."
                                },
                                "tracing_mode": {
                                    "type": "string",
                                    "description": " Tracing mode of the Lambda Function. Valid value can be either PassThrough or Active."
                                },
                                "compatible_runtimes": {
                                    "type": "array",
                                    "description": "A list of Runtimes this layer is compatible with. Up to 5 runtimes can be specified."
                                },
                                "compatible_architectures": {
                                    "type": "array",
                                    "description": "A list of Architectures Lambda layer is compatible with. Currently x86_64 and arm64 can be specified.",
                                    "enum": ["x86_64", "arm64"]
                                },
                                "create_async_event_config": {
                                    "type": "boolean",
                                    "description": "Controls whether async event configuration for Lambda Function/Alias should be created"
                                },
                                "create_current_version_async_event_config": {
                                    "type": "boolean",
                                    "description": "Whether to allow async event configuration on current version of Lambda Function (this will revoke permissions from previous version because Terraform manages only current resources)"
                                },
                                "create_unqualified_alias_async_event_config": {
                                    "type": "boolean",
                                    "description": "Whether to allow async event configuration on unqualified alias pointing to $LATEST version"
                                },
                                "maximum_event_age_in_seconds": {
                                    "type": "integer",
                                    "description": "Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600."
                                },
                                "maximum_retry_attempts": {
                                    "type": "integer",
                                    "description": "Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2."
                                },
                                "destination_on_failure": {
                                    "type": "string",
                                    "description": "Amazon Resource Name (ARN) of the destination resource for failed asynchronous invocations"
                                },
                                "destination_on_success": {
                                    "type": "string",
                                    "description": "Amazon Resource Name (ARN) of the destination resource for successful asynchronous invocations"
                                },
                                "event_source_mapping": {
                                    "type": "object",
                                    "description": "Map of event source mapping"
                                },
                                "use_existing_cloudwatch_log_group": {
                                    "type": "boolean",
                                    "description": "Whether to use an existing CloudWatch log group or create new"
                                },
                                "cloudwatch_logs_retention_in_days": {
                                    "type": "integer",
                                    "description": "Specifies the number of days you want to retain log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653."
                                },
                                "provisioned_concurrent_executions": {
                                    "type": "integer",
                                    "description": "Amount of capacity to allocate. Set to 1 or greater to enable, or set to 0 to disable provisioned concurrency."
                                },
                                "cloudwatch_logs_kms_key_id": {
                                    "type": "string",
                                    "description": "The ARN of the KMS Key to use when encrypting log data."
                                },
                                "image_config_entry_point": {
                                    "type": "array",
                                    "description": "The ENTRYPOINT for the docker image"
                                },
                                "image_config_command": {
                                    "type": "array",
                                    "description": "The CMD for the docker image"
                                },
                                "image_config_working_directory": {
                                    "type": "string",
                                    "description": "The working directory for the docker image"
                                }
                            }
                        }
                    }
                }
            }
        },
        "outDef": {
            "type": "object",
            "properties": {
                "out": {
                    "type": "object",
                    "description": "The output for your aws lambda module, this can be generated or provided",
                    "properties": {
                        "attributes": {
                            "type": "object",
                            "description": "The advanced section of all the aws lambda module",
                            "properties": {
                                "function_name": {
                                    "type": "string",
                                    "description": "The name of the Lambda Function"
                                },
                                "function_arn": {
                                    "type": "string",
                                    "description": "The ARN of the Lambda Function"
                                },
                                "function_invoke_arn": {
                                    "type": "string",
                                    "description": "The Invoke ARN of the Lambda Function"
                                },
                                "function_qualified_arn": {
                                    "type": "string",
                                    "description": "The ARN identifying your Lambda Function Version"
                                },
                                "function_role_arn": {
                                    "type": "string",
                                    "description": "The ARN of the IAM role created for the Lambda Function"
                                },
                                "function_role_name": {
                                    "type": "string",
                                    "description": "The name of the IAM role created for the Lambda Function"
                                }

                            }
                        }
                    },
                    "required": []
                }
            }
        }
    }
}
