{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
            },
            "flavor": {
              "type": "string",
              "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
            },
            "version": {
              "type": "string",
              "description": "This field can be used to pin to a particular version"
            },
            "lifecycle": {
              "type": "string",
              "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
              "enum": [
                "ENVIRONMENT_BOOTSTRAP",
                "ENVIRONMENT"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag to disable the resource"
            },
            "conditional_on_intent": {
              "type": "string",
              "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
            },
            "provided": {
              "type": "boolean",
              "description": "Flag to tell if the resource should not be provisioned by facets",
              "default": false
            },
            "depends_on": {
              "type": "array",
              "items": {},
              "description": "Dependencies on other resources. e.g. application x may depend on mysql"
            },
            "metadata": {
              "type": "object",
              "description": "Metadata related to the resource",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
                }
              },
              "required": []
            },
            "spec": {
              "type": "object",
              "description": "Specification as per resource types schema"
            },
            "out": {
              "type": "object",
              "description": "Output given by the resource for others to refer."
            },
            "advanced": {
              "type": "object",
              "description": "Additional fields if any for a particular implementation of a resource"
            }
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": false
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata",
              "spec"
            ]
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "zookeeper"
          ]
        },
        "flavor": {
          "type": "string",
          "enum": [
            "k8s"
          ]
        },
        "version": {
          "type": "string",
          "enum": [
            "0.1"
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "zookeeper_version": {
              "type": "string",
              "definition": "version of zookeeper e.g. 3.8.1"
            },
            "size": {
              "type": "object",
              "$schema": "http://json-schema.org/draft-07/schema#",
              "title": "writer-reader-datastore-sizing",
              "required": [
                "writer"
              ],
              "properties": {
                "writer": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "type": "object",
                  "oneOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "required": [
                        "cpu",
                        "memory"
                      ],
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "The number of CPU cores required, e.g '1' or '1000m'",
                          "minLength": 1,
                          "pattern": "^[0-9]+[m]?$",
                          "examples": [
                            "1",
                            "1000m"
                          ]
                        },
                        "memory": {
                          "type": "string",
                          "description": "The amount of memory required, e.g '800Mi' or '1.5Gi'",
                          "minLength": 1,
                          "pattern": "^[0-9]+(\\.[0-9]+)?[EiKMGTP]i?",
                          "examples": [
                            "800Mi",
                            "1.5Gi"
                          ]
                        },
                        "cpu_limit": {
                          "type": "string",
                          "description": "The CPU limit to set a maximum limit on the amount of CPU resources utilization, e.g '1' or '1000m'",
                          "minLength": 1,
                          "pattern": "^[0-9]+[m]?$",
                          "examples": [
                            "1",
                            "1000m"
                          ]
                        },
                        "memory_limit": {
                          "type": "string",
                          "description": "The memory limit to set a maximum limit on the amount of memory resources utilization, e.g '800Mi' or '1.5Gi'",
                          "minLength": 1,
                          "pattern": "^[0-9]+(\\.[0-9]+)?[EiKMGTP]i?",
                          "examples": [
                            "800Mi",
                            "1.5Gi"
                          ]
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "required": [
                        "instance"
                      ],
                      "properties": {
                        "instance": {
                          "type": "string",
                          "description": "The instance type of the node. e.g 't2.micro', 'Standard_DS1_v2', 'n1-standard-2', 'db.m5.large', 'db-n1-standard-1' or 'db-f1-micro'",
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9-.]+$",
                          "examples": [
                            "t2.micro",
                            "Standard_DS1_v2",
                            "n1-standard-2",
                            "db.m5.large",
                            "db.r5.large",
                            "db.t3.medium",
                            "db-n1-standard-1",
                            "db-f1-micro"
                          ]
                        }
                      }
                    }
                  ],
                  "properties": {
                    "volume": {
                      "type": "string",
                      "description": "The size of the volume. e.g '10G' or '5Gi'",
                      "minLength": 1,
                      "pattern": "^[0-9]+[a-zA-Z]$",
                      "examples": [
                        "10G",
                        "5Gi"
                      ]
                    }
                  }
                },
                "reader": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "type": "object",
                  "required": [
                    "instance_count"
                  ],
                  "properties": {
                    "instance_count": {
                      "type": "integer",
                      "description": "The number of instances to create.",
                      "minimum": 1
                    },
                    "replica_count": {
                      "type": "integer",
                      "description": "[Deprecated] The number of instances to create.",
                      "minimum": 1
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "oneOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "required": [
                            "cpu",
                            "memory"
                          ],
                          "properties": {
                            "cpu": {
                              "type": "string",
                              "description": "The number of CPU cores required, e.g '1' or '1000m'",
                              "minLength": 1,
                              "pattern": "^[0-9]+[m]?$",
                              "examples": [
                                "1",
                                "1000m"
                              ]
                            },
                            "memory": {
                              "type": "string",
                              "description": "The amount of memory required, e.g '800Mi' or '1.5Gi'",
                              "minLength": 1,
                              "pattern": "^[0-9]+(\\.[0-9]+)?[EiKMGTP]i?",
                              "examples": [
                                "800Mi",
                                "1.5Gi"
                              ]
                            },
                            "cpu_limit": {
                              "type": "string",
                              "description": "The CPU limit to set a maximum limit on the amount of CPU resources utilization, e.g '1' or '1000m'",
                              "minLength": 1,
                              "pattern": "^[0-9]+[m]?$",
                              "examples": [
                                "1",
                                "1000m"
                              ]
                            },
                            "memory_limit": {
                              "type": "string",
                              "description": "The memory limit to set a maximum limit on the amount of memory resources utilization, e.g '800Mi' or '1.5Gi'",
                              "minLength": 1,
                              "pattern": "^[0-9]+(\\.[0-9]+)?[EiKMGTP]i?",
                              "examples": [
                                "800Mi",
                                "1.5Gi"
                              ]
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "required": [
                            "instance"
                          ],
                          "properties": {
                            "instance": {
                              "type": "string",
                              "description": "The instance type of the node. e.g 't2.micro', 'Standard_DS1_v2', 'n1-standard-2', 'db.m5.large', 'db-n1-standard-1' or 'db-f1-micro'",
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9-.]+$",
                              "examples": [
                                "t2.micro",
                                "Standard_DS1_v2",
                                "n1-standard-2",
                                "db.m5.large",
                                "db.r5.large",
                                "db.t3.medium",
                                "db-n1-standard-1",
                                "db-f1-micro"
                              ]
                            }
                          }
                        }
                      ],
                      "properties": {
                        "volume": {
                          "type": "string",
                          "description": "The size of the volume. e.g '10G' or '5Gi'",
                          "minLength": 1,
                          "pattern": "^[0-9]+[a-zA-Z]$",
                          "examples": [
                            "10G",
                            "5Gi"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "required": [
            "zookeeper_version",
            "size"
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "out": {
          "type": "object",
          "additionalProperties": false,
          "allOf": [
            {
              "type": "object",
              "properties": {
                "spec": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "zookeeper_version": {
                      "type": "string",
                      "definition": "version of zookeeper e.g. 3.8.1"
                    },
                    "size": {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "writer-reader-datastore-sizing",
                      "required": [
                        "writer"
                      ],
                      "properties": {
                        "writer": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "oneOf": [
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "type": "object",
                              "required": [
                                "cpu",
                                "memory"
                              ],
                              "properties": {
                                "cpu": {
                                  "type": "string",
                                  "description": "The number of CPU cores required, e.g '1' or '1000m'",
                                  "minLength": 1,
                                  "pattern": "^[0-9]+[m]?$",
                                  "examples": [
                                    "1",
                                    "1000m"
                                  ]
                                },
                                "memory": {
                                  "type": "string",
                                  "description": "The amount of memory required, e.g '800Mi' or '1.5Gi'",
                                  "minLength": 1,
                                  "pattern": "^[0-9]+(\\.[0-9]+)?[EiKMGTP]i?",
                                  "examples": [
                                    "800Mi",
                                    "1.5Gi"
                                  ]
                                },
                                "cpu_limit": {
                                  "type": "string",
                                  "description": "The CPU limit to set a maximum limit on the amount of CPU resources utilization, e.g '1' or '1000m'",
                                  "minLength": 1,
                                  "pattern": "^[0-9]+[m]?$",
                                  "examples": [
                                    "1",
                                    "1000m"
                                  ]
                                },
                                "memory_limit": {
                                  "type": "string",
                                  "description": "The memory limit to set a maximum limit on the amount of memory resources utilization, e.g '800Mi' or '1.5Gi'",
                                  "minLength": 1,
                                  "pattern": "^[0-9]+(\\.[0-9]+)?[EiKMGTP]i?",
                                  "examples": [
                                    "800Mi",
                                    "1.5Gi"
                                  ]
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "type": "object",
                              "required": [
                                "instance"
                              ],
                              "properties": {
                                "instance": {
                                  "type": "string",
                                  "description": "The instance type of the node. e.g 't2.micro', 'Standard_DS1_v2', 'n1-standard-2', 'db.m5.large', 'db-n1-standard-1' or 'db-f1-micro'",
                                  "minLength": 1,
                                  "pattern": "^[a-zA-Z0-9-.]+$",
                                  "examples": [
                                    "t2.micro",
                                    "Standard_DS1_v2",
                                    "n1-standard-2",
                                    "db.m5.large",
                                    "db.r5.large",
                                    "db.t3.medium",
                                    "db-n1-standard-1",
                                    "db-f1-micro"
                                  ]
                                }
                              }
                            }
                          ],
                          "properties": {
                            "volume": {
                              "type": "string",
                              "description": "The size of the volume. e.g '10G' or '5Gi'",
                              "minLength": 1,
                              "pattern": "^[0-9]+[a-zA-Z]$",
                              "examples": [
                                "10G",
                                "5Gi"
                              ]
                            }
                          }
                        },
                        "reader": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "required": [
                            "instance_count"
                          ],
                          "properties": {
                            "instance_count": {
                              "type": "integer",
                              "description": "The number of instances to create.",
                              "minimum": 1
                            },
                            "replica_count": {
                              "type": "integer",
                              "description": "[Deprecated] The number of instances to create.",
                              "minimum": 1
                            }
                          },
                          "allOf": [
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "type": "object",
                              "oneOf": [
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "type": "object",
                                  "required": [
                                    "cpu",
                                    "memory"
                                  ],
                                  "properties": {
                                    "cpu": {
                                      "type": "string",
                                      "description": "The number of CPU cores required, e.g '1' or '1000m'",
                                      "minLength": 1,
                                      "pattern": "^[0-9]+[m]?$",
                                      "examples": [
                                        "1",
                                        "1000m"
                                      ]
                                    },
                                    "memory": {
                                      "type": "string",
                                      "description": "The amount of memory required, e.g '800Mi' or '1.5Gi'",
                                      "minLength": 1,
                                      "pattern": "^[0-9]+(\\.[0-9]+)?[EiKMGTP]i?",
                                      "examples": [
                                        "800Mi",
                                        "1.5Gi"
                                      ]
                                    },
                                    "cpu_limit": {
                                      "type": "string",
                                      "description": "The CPU limit to set a maximum limit on the amount of CPU resources utilization, e.g '1' or '1000m'",
                                      "minLength": 1,
                                      "pattern": "^[0-9]+[m]?$",
                                      "examples": [
                                        "1",
                                        "1000m"
                                      ]
                                    },
                                    "memory_limit": {
                                      "type": "string",
                                      "description": "The memory limit to set a maximum limit on the amount of memory resources utilization, e.g '800Mi' or '1.5Gi'",
                                      "minLength": 1,
                                      "pattern": "^[0-9]+(\\.[0-9]+)?[EiKMGTP]i?",
                                      "examples": [
                                        "800Mi",
                                        "1.5Gi"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "type": "object",
                                  "required": [
                                    "instance"
                                  ],
                                  "properties": {
                                    "instance": {
                                      "type": "string",
                                      "description": "The instance type of the node. e.g 't2.micro', 'Standard_DS1_v2', 'n1-standard-2', 'db.m5.large', 'db-n1-standard-1' or 'db-f1-micro'",
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z0-9-.]+$",
                                      "examples": [
                                        "t2.micro",
                                        "Standard_DS1_v2",
                                        "n1-standard-2",
                                        "db.m5.large",
                                        "db.r5.large",
                                        "db.t3.medium",
                                        "db-n1-standard-1",
                                        "db-f1-micro"
                                      ]
                                    }
                                  }
                                }
                              ],
                              "properties": {
                                "volume": {
                                  "type": "string",
                                  "description": "The size of the volume. e.g '10G' or '5Gi'",
                                  "minLength": 1,
                                  "pattern": "^[0-9]+[a-zA-Z]$",
                                  "examples": [
                                    "10G",
                                    "5Gi"
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "zookeeper_version",
                    "size"
                  ]
                }
              }
            },
            {
              "properties": {
                "interfaces": {
                  "type": "object",
                  "additionalProperties": false,
                  "patternProperties": {
                    "^([a-z]*-[0-9]+)$": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "definition": "Any Interface",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username to connect (if any)"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password to connect (if any)"
                        },
                        "host": {
                          "type": "string",
                          "description": "Host for service discovery"
                        },
                        "port": {
                          "type": "string",
                          "description": "Port for service discovery"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of interface, same as key"
                        },
                        "connection_string": {
                          "type": "string",
                          "description": "Connection string to connect"
                        }
                      }
                    }
                  }
                }
              },
              "required": []
            }
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "advanced": {
          "type": "object",
          "allOf": [
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "definition": "Kubernetes Schema",
              "properties": {
                "k8s": {
                  "type": "object",
                  "properties": {
                    "zookeeper": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "object",
                          "description": "Helm values as per the Bitnami zookeeper chart oci://registry-1.docker.io/bitnamicharts/zookeeper"
                        },
                        "k8s_service_names": {
                          "type": "object",
                          "description": "Service names of the zookeeper resource"
                        },
                        "chart_version": {
                          "type": "string",
                          "description": "Chart version to use e.g. 11.2.1"
                        }
                      }
                    }
                  }
                }
              },
              "required": []
            }
          ]
        }
      }
    }
  ],
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ]
}
