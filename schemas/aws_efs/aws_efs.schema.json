{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
            },
            "flavor": {
              "type": "string",
              "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
            },
            "version": {
              "type": "string",
              "description": "This field can be used to pin to a particular version"
            },
            "lifecycle": {
              "type": "string",
              "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
              "enum": [
                "ENVIRONMENT_BOOTSTRAP",
                "ENVIRONMENT"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag to disable the resource"
            },
            "conditional_on_intent": {
              "type": "string",
              "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
            },
            "provided": {
              "type": "boolean",
              "description": "Flag to tell if the resource should not be provisioned by facets",
              "default": false
            },
            "depends_on": {
              "type": "array",
              "items": {},
              "description": "Dependencies on other resources. e.g. application x may depend on mysql"
            },
            "metadata": {
              "type": "object",
              "description": "Metadata related to the resource",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
                }
              },
              "required": []
            },
            "spec": {
              "type": "object",
              "description": "Specification as per resource types schema"
            },
            "out": {
              "type": "object",
              "description": "Output given by the resource for others to refer."
            },
            "advanced": {
              "type": "object",
              "description": "Additional fields if any for a particular implementation of a resource"
            }
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": false
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata",
              "spec"
            ]
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "aws_efs"
          ]
        },
        "flavor": {
          "type": "string",
          "enum": [
            "default"
          ]
        },
        "version": {
          "type": "string",
          "enum": [
            "0.1",
            "latest"
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "advanced": {
          "type": "object",
          "properties": {
            "aws_efs": {
              "type": "object",
              "description": "The advanced section of all the aws efs module",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "A map of tags to assign to the file system"
                },
                "creation_token": {
                  "type": "string",
                  "description": "A unique name (a maximum of 64 characters are allowed) used as reference when creating the Elastic File System to ensure idempotent file system creation. By default generated by Terraform"
                },
                "encrypted": {
                  "type": "boolean",
                  "description": "If true, the disk will be encrypted"
                },
                "kms_key_id": {
                  "type": "string",
                  "description": "The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true"
                },
                "performance_mode": {
                  "type": "string",
                  "description": " The file system performance mode",
                  "enum": [
                    "generalPurpose",
                    "maxIO"
                  ]
                },
                "availability_zone_name": {
                  "type": "string",
                  "description": "The AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes"
                },
                "provisioned_throughput_in_mibps": {
                  "type": "integer",
                  "description": "The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with throughput_mode set to provisioned"
                },
                "throughput_mode": {
                  "type": "string",
                  "description": "Throughput mode for the file system",
                  "enum": [
                    "bursting",
                    "provisioned"
                  ]
                },
                "lifecycle_policy": {
                  "type": "object",
                  "description": "A file system lifecycle policy object",
                  "properties": {
                    "transition_to_ia": {
                      "type": "string",
                      "description": "Indicates how long it takes to transition files to the IA storage class",
                      "enum": [
                        "AFTER_7_DAYS",
                        "AFTER_14_DAYS",
                        "AFTER_30_DAYS",
                        "AFTER_60_DAYS",
                        "AFTER_90_DAYS"
                      ]
                    },
                    "transition_to_primary_storage_class": {
                      "type": "string",
                      "description": "Describes the policy used to transition a file from infequent access storage to primary storage",
                      "enum": [
                        "AFTER_1_ACCESS"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "out": {
          "type": "object",
          "description": "The output for your aws lambda module, this can be generated or provided",
          "properties": {
            "attributes": {
              "type": "object",
              "description": "The advanced section of all the aws lambda module",
              "properties": {
                "topics": {
                  "type": "array",
                  "description": "The list of topic names"
                }
              }
            }
          },
          "required": []
        }
      }
    }
  ],
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ]
}
