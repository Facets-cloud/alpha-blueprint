{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
            },
            "flavor": {
              "type": "string",
              "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
            },
            "version": {
              "type": "string",
              "description": "This field can be used to pin to a particular version"
            },
            "lifecycle": {
              "type": "string",
              "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
              "enum": [
                "ENVIRONMENT_BOOTSTRAP",
                "ENVIRONMENT"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag to disable the resource"
            },
            "conditional_on_intent": {
              "type": "string",
              "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
            },
            "provided": {
              "type": "boolean",
              "description": "Flag to tell if the resource should not be provisioned by facets",
              "default": false
            },
            "depends_on": {
              "type": "array",
              "items": {},
              "description": "Dependencies on other resources. e.g. application x may depend on mysql"
            },
            "metadata": {
              "type": "object",
              "description": "Metadata related to the resource",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
                }
              },
              "required": []
            },
            "spec": {
              "type": "object",
              "description": "Specification as per resource types schema"
            },
            "out": {
              "type": "object",
              "description": "Output given by the resource for others to refer."
            },
            "advanced": {
              "type": "object",
              "description": "Additional fields if any for a particular implementation of a resource"
            }
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": false
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata",
              "spec"
            ]
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object"
        },
        "advanced": {
          "type": "object",
          "properties": {
            "azure_storage_container": {
              "type": "object",
              "description": "The advanced section of all the azure storage container module",
              "properties": {
                "az_storage_account_name": {
                  "type": "string",
                  "description": "The name of the storage account which you want this container to be added"
                },
                "az_storage_account_id": {
                  "type": "string",
                  "description": "The id of the storage account which you want this container to be added"
                },
                "access_type": {
                  "type": "string",
                  "enum": [
                    "blob",
                    "container",
                    "private"
                  ],
                  "description": "The Access Level configured for this Container. Possible values are blob, container or private. Defaults to private"
                },
                "lifecycles": {
                  "type": "object",
                  "additionalProperties": false,
                  "minProperties": 1,
                  "description": "The lifecycle map that you can give to the container blobs",
                  "patternProperties": {
                    "^[a-zA-Z0-9_.-]*$": {
                      "description": "This can be a random name to specify a lifecycle rule",
                      "type": "object",
                      "properties": {
                        "prefix_match": {
                          "type": "array",
                          "description": "An array of strings for prefixes to be matched."
                        },
                        "tier_to_cool_after_days": {
                          "type": "integer",
                          "description": "The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1"
                        },
                        "tier_to_archive_after_days": {
                          "type": "integer",
                          "description": "The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to -1"
                        },
                        "delete_after_days": {
                          "type": "integer",
                          "description": "The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to -1"
                        },
                        "snapshot_delete_after_days": {
                          "type": "integer",
                          "description": "The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to -1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "azure_storage_container"
          ]
        },
        "flavor": {
          "type": "string",
          "enum": [
            "default"
          ]
        },
        "version": {
          "type": "string",
          "enum": [
            "0.1",
            "latest"
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "out": {
          "type": "object",
          "properties": {
            "attributes": {
              "type": "object",
              "description": "The output attributes for azure storage container module",
              "properties": {
                "storage_account_name": {
                  "type": "string",
                  "description": "The storage account name where the containers are created"
                },
                "storage_account_id": {
                  "type": "string",
                  "description": "The storage account id where the containers are created"
                },
                "primary_access_key": {
                  "type": "string",
                  "description": "The primary access key for the storage account"
                },
                "container_name": {
                  "type": "string",
                  "description": "The name of the container that is created and will be referenced by other applications"
                }
              }
            }
          },
          "required": []
        }
      }
    }
  ],
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ]
}
