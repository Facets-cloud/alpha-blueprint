{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "description": "Schema for Prometheus",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
            },
            "flavor": {
              "type": "string",
              "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
            },
            "version": {
              "type": "string",
              "description": "This field can be used to pin to a particular version"
            },
            "lifecycle": {
              "type": "string",
              "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
              "enum": [
                "ENVIRONMENT_BOOTSTRAP",
                "ENVIRONMENT"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag to disable the resource"
            },
            "conditional_on_intent": {
              "type": "string",
              "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
            },
            "provided": {
              "type": "boolean",
              "description": "Flag to tell if the resource should not be provisioned by facets",
              "default": false
            },
            "depends_on": {
              "type": "array",
              "items": {},
              "description": "Dependencies on other resources. e.g. application x may depend on mysql"
            },
            "metadata": {
              "type": "object",
              "description": "Metadata related to the resource",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
                }
              },
              "required": []
            },
            "spec": {
              "type": "object",
              "description": "Specification as per resource types schema"
            },
            "out": {
              "type": "object",
              "description": "Output given by the resource for others to refer."
            },
            "advanced": {
              "type": "object",
              "description": "Additional fields if any for a particular implementation of a resource"
            }
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": false
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata",
              "spec"
            ]
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "alertmanager",
            "grafana",
            "pushgateway",
            "prometheus"
          ],
          "properties": {
            "mode": {
              "type": "string",
              "description": "if the flavor is victoria_metrics, you can choose your mode of installation. either standalone or cluster",
              "enum": [
                "cluster",
                "standalone"
              ],
              "default": "standalone"
            },
            "diskSize": {
              "type": "string",
              "description": "Size of the prometheus PV"
            },
            "alertmanager": {
              "type": "object",
              "description": "Alertmanager specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of alertmanager pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                },
                "receivers": {
                  "type": "object",
                  "description": "Receivers for alertmanager",
                  "patternProperties": {
                    ".*": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "send_resolved": {
                          "type": "bool"
                        }
                      }
                    }
                  }
                }
              }
            },
            "grafana": {
              "type": "object",
              "description": "Grafana specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of alertmanager pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                },
                "additionalDataSources": {
                  "type": "object",
                  "description": "Additional data sources",
                  "patternProperties": {
                    ".*": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "editable": {
                          "type": "bool"
                        },
                        "jsonData": {
                          "type": "object"
                        },
                        "orgId": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "version": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "prometheus": {
              "type": "object",
              "description": "Prometheus specifications",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "you want prometheus to be enabled/disabled",
                  "default": true
                },
                "size": {
                  "type": "object",
                  "description": "Size of alertmanager pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                }
              }
            },
            "vmsingle": {
              "type": "object",
              "description": "vmsingle specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of vmsingle pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                }
              }
            },
            "vmalert": {
              "type": "object",
              "description": "vmalert specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of vmalert pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                }
              }
            },
            "vmselect": {
              "type": "object",
              "description": "vmselect specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of vmselect pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                }
              }
            },
            "vmstorage": {
              "type": "object",
              "description": "vmstorage specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of vmstorage pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                }
              }
            },
            "vminsert": {
              "type": "object",
              "description": "vminsert specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of vminsert pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                }
              }
            },
            "vmagent": {
              "type": "object",
              "description": "vmalert specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of vmagent pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                }
              }
            },
            "prometheus-operator": {
              "type": "object",
              "description": "Prometheus Operator specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of alertmanager pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                }
              }
            },
            "pushgateway": {
              "type": "object",
              "description": "Pushgateway specifications",
              "properties": {
                "size": {
                  "type": "object",
                  "description": "Size of alertmanager pod",
                  "allOf": [
                    {
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "CPU request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu"
                        },
                        "memory": {
                          "type": "string",
                          "description": "Memory request in format mentioned @ https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory"
                        },
                        "volume": {
                          "type": "string",
                          "description": "Volume request in kubernetes persistent volumes"
                        }
                      },
                      "required": [
                        "cpu",
                        "memory"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "advanced": {
          "type": "object",
          "description": "Advanced block of the Prometheus configuration",
          "properties": {
            "enable_migration": {
              "type": "boolean",
              "description": "Enable if you want to migrate existing prometheus data to victoria_metrics. this should be only enabled when flavor is victoria_metrics",
              "default": false
            },
            "enable_host_anti_affinty": {
              "type": "boolean",
              "description": "Enable if you want to spread victoria metrics pods across different nodes, should only be enabled when flavor is victoria_metrics and mode is cluster",
              "default": false
            },
            "kube-prometheus-stack": {
              "type": "object",
              "description": "Advanced values of kube-prometheus-stack",
              "properties": {
                "values": {
                  "type": "object",
                  "description": "Helm values as per the helm chart https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack"
                }
              }
            },
            "victoria-metrics-k8s-stack": {
              "type": "object",
              "description": "Advanced values of victoria-metrics-k8s-stack",
              "properties": {
                "values": {
                  "type": "object",
                  "description": "Helm values as per the helm chart https://github.com/VictoriaMetrics/helm-charts/blob/master/charts/victoria-metrics-k8s-stack/values.yaml"
                }
              }
            },
            "pushgateway": {
              "type": "object",
              "description": "Advanced values of pushgateway",
              "properties": {
                "values": {
                  "type": "object",
                  "description": "Helm values as per the helm chart https://artifacthub.io/packages/helm/prometheus-community/prometheus-pushgateway"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "flavor": {
          "type": "string",
          "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc.",
          "enum": [
            "default",
            "victoria_metrics"
          ]
        }
      }
    }
  ],
  "required": [
    "kind",
    "version",
    "metadata",
    "spec"
  ]
}
