{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Schema for deploying a Helm chart in a facets environment",
  "type": "object",
  "properties": {
    "kind": {
      "description": "Kind of the intent, always set to 'helm'",
      "const": "helm"
    },
    "flavor": {
      "description": "Flavor for the Helm chart implementation, always set to 'default'",
      "type": "string",
      "enum": [
        "default",
        "k8s"
      ]
    },
    "spec": {
      "description": "Specification of the Helm chart intent",
      "type": "object",
      "properties": {
        "helm": {
          "description": "Configuration for the Helm chart",
          "type": "object",
          "properties": {
            "chart": {
              "description": "URL or local path to the Helm chart package",
              "type": "string"
            },
            "repository": {
              "description": "URL for the helm repository",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace to deploy the Helm chart in",
              "type": "string"
            },
            "wait": {
              "description": "Whether to wait for the Helm chart deployment to complete",
              "type": "boolean"
            }
          },
          "required": ["chart", "namespace", "wait"]
        },
        "values": {
          "description": "The values to be passed on to the chart in the form of a json object",
          "type": "object"
        }
      },
      "required": ["helm", "values"]
    },
    "version": {
      "type": "string",
      "enum": [
        "0.1",
        "latest"
      ]
    },
    "disabled": {
      "type": "boolean",
      "description": "Flag to disable the resource"
    },
    "provided": {
      "type": "boolean",
      "description": "Flag to tell if the resource should not be provisioned by facets",
      "default": false
    },
    "depends_on": {
      "type": "array",
      "items": {},
      "description": "Dependencies on other resources. e.g. application x may depend on y"
    },
    "metadata": {
      "type": "object",
      "description": "Metadata related to the resource",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
        }
      }
    }
  },
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ]
}
