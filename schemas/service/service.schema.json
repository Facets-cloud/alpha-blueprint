{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "allOf": [
      {
        "$ref": "../../traits/base.schema.json"
      },
      {
        "$ref": "#/$defs/specDef"
      },
      {
        "$ref": "#/$defs/outDef"
      },
      {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances",
            "enum": ["service"]
          },
          "flavor": {
            "type": "string",
            "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc.",
            "enum": ["default"]
          },
          "version": {
            "type": "string",
            "description": "This field can be used to pin to a particular version",
            "enum": ["0.1"]
          }
        }
      }
    ],
    "$defs": {
      "specDef": {
        "type": "object",
        "properties": {
          "spec": {
            "type": "object",
            "properties": {
              "release": {
                "$ref": "./release.schema.json",
                "description": "Map of all release keys"
              },
              "type": {
                "type": "string",
                "description": "This will specify the type of service you want to create. eg: application, statefulset,cronjob etc",
                "enum": ["application", "statefulset", "cronjob", "job"]
              },
              "enable_host_anti_affinity": {
                "type": "boolean",
                "description": "boolean to enable or disable host anti affinity"
              },
              "env": {
                "type": "object",
                "description": "The key value pairs of all the environment variables that needs to be passed to the pod"
              },
              "runtime": {
                "$ref": "./runtime.schema.json",
                "description": "Map of all runtime keys"
              },
              "restart_policy": {
                "type": "string",
                "description": "Can be of type Always , OnFailure or Never",
                "enum": ["Always", "OnFailure", "Never"]
              }
            },
            "required": [
              "release",
              "type",
              "enable_host_anti_affinity",
              "runtime"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                          "type": { "enum": ["application"] }
                        }
                    },
                    "then": { "$ref": "./application-type.schema.json" }
                },
                {
                    "if": {
                        "properties": {
                          "type": { "enum": ["statefulset"] }
                        }
                    },
                    "then": { "$ref": "./statefulset-type.schema.json" }
                },
                {
                    "if": {
                        "properties": {
                          "type": { "enum": ["cronjob"] }
                        }
                    },
                    "then": { "$ref": "./cronjob-type.schema.json" }
                },
                {
                    "if": {
                        "properties": {
                          "type": { "enum": ["job"] }
                        }
                    },
                    "then": { "$ref": "./job-type.schema.json" }
                }
            ]
          },
          "advanced": {
            "type": "object",
            "description": "Advanced section of kind service",
            "properties": {
              "aws": {
                "type": "object",
                "description": "Map of all aws advanced keys", 
                "$ref": "./aws-advanced.schema.json"
              },
              "gcp": {
                "type": "object",
                "description": "Map of all gcp advanced keys",
                "$ref": "./gcp-advanced.schema.json"
              },
              "chart": {
                "type": "object",
                "description": "Map of all chart advanced keys",
                "$ref": "./chart-advanced.schema.json"
              }
            },
            "anyOf": [
              {
                "allOf": [
                  {
                    "if": {
                      "properties": {
                        "flavor": { "enum": ["aws"] }
                      }
                  },
                  "then": { "required": ["aws"]}
                  },
                  {
                    "not" : { "required" : ["gcp"] }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "if": {
                      "properties": {
                        "flavor": { "enum": ["gcp"] }
                      }
                  },
                  "then": { "required": ["gcp"]}
                  },
                  {
                    "not" : { "required" : ["aws"] }
                  }
                ]
              }
            ]
          }
        }
      },
      "outDef": {
        "type": "object",
        "properties": {
          "out": {
            "type": "object",
            "properties": {
              "interfaces": {
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "description": "The output for your service module, this can be generated or provided",
                "patternProperties": {
                  "^[a-zA-Z0-9_.-]*$": {
                    "description": "This is the name of the output interface this can be any name depending on the number of prefix domains in the domains block",
                    "$ref": "../../traits/datastore-interface.schema.json"
                  }
                }
              }
            },
            "required": []
          }
        }
      }
    }
  }