{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "allOf": [
      {
        "$ref": "../../traits/base.schema.json"
      },
      {
        "$ref": "#/$defs/specDef"
      },
      {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "google_cloud_storage"
            ]
          },
          "flavor": {
            "type": "string",
            "enum": [
              "default"
            ]
          },
          "version": {
            "type": "string",
            "enum": [
              "0.1",
              "latest"
            ]
          }
        }
      },
      {
        "$ref": "#/$defs/outDef"
      }
    ],
    "required": [
      "kind",
      "flavor",
      "version",
      "metadata",
      "spec"
    ],
    "$defs": {
      "specDef": {
        "type": "object",
        "properties": {
          "spec": {
            "type": "object",
            "properties": {}
          }
        },
        "required": []
      },
      "outDef": {
        "type": "object",
        "properties": {
          "out": {
            "type": "object",
            "additionalProperties": false,
            "allOf": [
              {
                "properties": {
                  "name": {
                    "type": "string",
                    "additionalProperties": false
                  },
                  "url": {
                    "type": "string",
                    "additionalProperties": false
                  }
                }
              }
            ]
          }
        }
      },
      "advancedDef": {
        "type": "object",
        "properties": {
          "advanced": {
            "type": "object",
            "properties": {
              "iam_members": {
                "type": "list(map)",
                "description": "The list of IAM members to grant permissions on the bucket"
              },
              "bucket_policy_only": {
                "type": "boolean",
                "description": "Enables Bucket Policy Only access to a bucket"
              },
              "cors": {
                "type": "list(map)",
                "description": "Configuration of CORS for bucket with structure as defined in https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#cors."
              },
              "default_kms_key_name": {
                "type": "string",
                "description": "A Cloud KMS key that will be used to encrypt objects inserted into this bucket"
              },
              "force_destroy": {
                "type": "boolean",
                "description": "When deleting a bucket, this boolean option will delete all contained objects. If false, Terraform will fail to delete buckets which contain objects."
              },
              "lifecycle_rules": {
                "type": "list(map)",
                "description": "The bucket's Lifecycle Rules configuration",
                "properties": {
                  "action": {
                    "type": "object",
                    "description": "The Lifecycle Rule's action configuration"
                  },
                  "condition": {
                    "type": "object",
                    "description": "The Lifecycle Rule's condition configuration"
                  }
                },
                "required": [
                  "action",
                  "condition"
                ]
              },
              "log_bucket": {
                "type": "string",
                "description": "The bucket that will receive log objects."
              },
              "log_object_prefix": {
                "type": "string",
                "description": "The object prefix for log objects."
              },
              "public_access_prevention": {
                "type": "string",
                "description": "Prevents public access to a bucket. Acceptable values are inherited or enforced. If inherited, the bucket uses public access prevention, only if the bucket is subject to the public access prevention organization policy constraint"
              },
              "retention_policy": {
                "type": "object",
                "description": "Configuration of the bucket's data retention policy for how long objects in the bucket should be retained",
                "properties": {
                  "is_locked": {
                    "type": "boolean",
                    "description": "If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy"
                  },
                  "retention_period": {
                    "type": "number",
                    "description": "The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived"
                  }
                },
                "required": [
                  "retention_period"
                ]
              },
              "website": {
                "type": "object",
                "description": "Map of website values. Supported attributes: main_page_suffix, not_found_page",
                "properties": {
                  "main_page_suffix": {
                    "type": "string",
                    "description": "Behaves as the bucket's directory index where missing objects are treated as potential directories"
                  },
                  "not_found_page": {
                    "type": "string",
                    "description": "The custom object to return when a requested resource is not found."
                  }
                }
              }
            }
          }
        }
      }
    }
}