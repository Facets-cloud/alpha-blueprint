{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Describes the type of resource. e.g. ingress, application, mysql etc. If not specified, fallback is the `folder_name`/instances"
            },
            "flavor": {
              "type": "string",
              "description": "Implementation selector for the resource. e.g. for a resource type ingress, default, aws_alb, gcp_alb etc."
            },
            "version": {
              "type": "string",
              "description": "This field can be used to pin to a particular version"
            },
            "lifecycle": {
              "type": "string",
              "description": "This field describes the phase in which the resource has to be invoked (`ENVIRONMENT_BOOTSTRAP`)",
              "enum": [
                "ENVIRONMENT_BOOTSTRAP",
                "ENVIRONMENT"
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Flag to disable the resource"
            },
            "conditional_on_intent": {
              "type": "string",
              "description": "Flag to enable the resource based on intent availability. eg mysql if mysql dashboard is required to be deployed. Note: Need to have the instance running beforehand to avail."
            },
            "provided": {
              "type": "boolean",
              "description": "Flag to tell if the resource should not be provisioned by facets",
              "default": false
            },
            "depends_on": {
              "type": "array",
              "items": {},
              "description": "Dependencies on other resources. e.g. application x may depend on mysql"
            },
            "metadata": {
              "type": "object",
              "description": "Metadata related to the resource",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource\n    - if not specified, fallback is the `filename`"
                }
              },
              "required": []
            },
            "spec": {
              "type": "object",
              "description": "Specification as per resource types schema"
            },
            "out": {
              "type": "object",
              "description": "Output given by the resource for others to refer."
            },
            "advanced": {
              "type": "object",
              "description": "Additional fields if any for a particular implementation of a resource"
            }
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "provided": {
                "const": false
              }
            }
          },
          "then": {
            "required": [
              "kind",
              "flavor",
              "version",
              "metadata",
              "spec"
            ]
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "properties": {
            "private": {
              "type": "boolean",
              "description": "Make this load balancer private"
            },
            "instances": {
              "type": "integer",
              "description": "Number of instances that you want to create per_instance loadbalancers"
            },
            "ports": {
              "description": "The map of all the ports that you need to expose on the loadbalancer",
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "additionalProperties": false,
              "minProperties": 1,
              "patternProperties": {
                "^[a-zA-Z0-9_.-]*$": {
                  "description": "The map of all the ports that you need to expose on the loadbalancer",
                  "properties": {
                    "protocol": {
                      "type": "string",
                      "description": "the protocol of the port , either tcp or udp",
                      "enum": [
                        "tcp",
                        "udp"
                      ]
                    },
                    "port": {
                      "type": "string",
                      "description": "Port number where the service needs to be accessible via the loadbalancer its the same port that will be exposed via the loadbalancer"
                    }
                  },
                  "required": [
                    "protocol",
                    "port"
                  ]
                }
              }
            },
            "selector": {
              "type": "object",
              "description": "Map of all the kubernetes selectors that are required to map the loadbalancer service to applications in the backend"
            },
            "pod_prefix": {
              "type": "string",
              "description": "The pod prefix to which the loadbalancer routes requests to"
            },
            "mode": {
              "type": "string",
              "description": "Mode can be either loadbalancing or per_instance. loadbalancing is for a single instance loadbalancing for backend applications and per_instance is for targeting a specific backend application",
              "enum": [
                "loadbalancing",
                "per_instance"
              ]
            }
          },
          "allOf": [
            {
              "if": {
                "properties": {
                  "mode": {
                    "enum": [
                      "per_instance"
                    ]
                  }
                }
              },
              "then": {
                "required": [
                  "private",
                  "mode",
                  "selector",
                  "ports",
                  "instances",
                  "pod_prefix"
                ]
              }
            },
            {
              "if": {
                "properties": {
                  "mode": {
                    "enum": [
                      "loadbalancing"
                    ]
                  }
                }
              },
              "then": {
                "required": [
                  "private",
                  "mode",
                  "selector",
                  "ports"
                ]
              }
            }
          ]
        },
        "advanced": {
          "anyOf": [
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "nlb": {
                  "type": "object",
                  "description": "Advanced section of the nlb",
                  "properties": {
                    "service_annotations": {
                      "type": "object",
                      "description": "Extra annotations that you want to add to the kubernetes service annotations block"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "tcp_lb"
          ],
          "description": "Describes the type of resource."
        },
        "flavor": {
          "type": "string",
          "enum": [
            "nlb"
          ]
        },
        "version": {
          "type": "string",
          "enum": [
            "0.1",
            "latest"
          ],
          "description": "This field can be used to pin to a particular version"
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "out": {
          "type": "object",
          "properties": {
            "loadbalancer_domains": {
              "type": "array",
              "description": "This is the list of loadbalancer domains that the module has created"
            },
            "interfaces": {
              "type": "object",
              "additionalProperties": false,
              "minProperties": 1,
              "description": "The output for generated parameters",
              "patternProperties": {
                "^[a-zA-Z0-9_.-]*$": {
                  "description": "This is the name of the output interface this can be any name depending on instance name",
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "definition": "Any Interface",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "New address of the resource tcp_lb is created for"
                    }
                  }
                }
              }
            }
          },
          "required": []
        }
      }
    }
  ],
  "required": [
    "kind",
    "flavor",
    "version",
    "metadata",
    "spec"
  ]
}
